# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-20.04'
  demands:
    - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDirectory: 'Tailspin.SpaceGame.Web/wwwroot'
  sdkVersion: '6.x'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(sdkVersion)'
  inputs:
    packageType: sdk
    version: '$(sdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDirectory) --output $(wwwrootDirectory)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId)" > bubuilildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDirectory)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

# - task: DotNetCoreCLI@2
#   displayName: 'Build the project - $(buildConfiguration)'
#   inputs:
#     command: 'build'
#     arguments: '--no-restore --configuration $(buildConfiguration)'
#     projects: '**/*.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Publish the project'
#   inputs:
#     command: 'publish'
#     projects: '**/*.csproj'
#     publishWebProjects: false
#     arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
#     zipAfterPublish: true

- task: PublishBuildartifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()


#- script: dotnet build --configuration $(buildConfiguration)
 # displayName: 'dotnet build $(buildConfiguration)'